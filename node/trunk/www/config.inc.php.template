<?php

//////////////////////////////////////////////////////////////////////////
// SQL SETUP --------------------------------------------
//////////////////////////////////////////////////////////////////////////

// the sql connection URL
$nodeDbUser = 'user';
$nodeDbHost = 'host';
$nodeDbPort = '5432';
$nodeDbPasswd = '';
$nodeDbName = 'node';

$userDbUser = 'user';
$userDbHost = 'host';
$userDbPort = '5432';
$userDbPasswd = '';
$userDbName = 'sadm';

//////////////////////////////////////////////////////////////////////////
// MAIL --------------------------------------------
//////////////////////////////////////////////////////////////////////////

// e-mails sent by the code will have this address as From:
$mailFromAddress = "nobody@nowhere.com";

//////////////////////////////////////////////////////////////////////////
// NODE SETUP --------------------------------------------
//////////////////////////////////////////////////////////////////////////

// id of this node in the node network: you should negotiate this with others in the network
$nodeId = "";

// the short name of this node in the network
$nodeName = "XXd";

// whether imported files are published by default
$publishxbmf = false;

//////////////////////////////////////////////////////////////////////////
// FILE LOCATIONS  --------------------------------------------
//////////////////////////////////////////////////////////////////////////

// $basedir -> Complete filesystem path
$basedir = 'C:/sotf/node';

// the directory where stations and radio shows will be archived
$repositoryDir = "$basedir/repository";

// the directory where stations and radio shows will be archived
$musicDir = "$basedir/music";

// the directory under which users have FTP or other access to send files to
$userDirs = "$basedir/users";

// the FTP URL for user directories (defined above)
$userFTP = 'ftp://foo.foo.org:8989/';

// the directory where incoming programmes (XBMF) are from stations
$xbmfInDir = "$basedir/incoming";

// where PEAR files are located
$peardir = 'C:/Program Files/php422/pear';

// where Smarty files are located
$smartydir = 'C:/sotf/helpers/smarty2.3';

// where getid3 files are located
$getid3dir = 'C:/sotf/helpers/getid3';

// where ImageMagick is installed
$magickDir = 'C:/Program Files/ImageMagick';

// where eZ xml files are located
//$ezxmldir = '/ezxml';

// Path to the class files
$classdir = $basedir . '/code/classes';

// Path to XML-RPC libraries
$xmlrpcdir = $basedir . '/code/xmlrpc';

// path to PHP scripts and images
$wwwdir = $basedir . '/www';

// The URL prefix for code/www subdir
$localPrefix = '/node/www';

//////////////////////////////////////////////////////////////////////////
// STREAMING --------------------------------------------
//////////////////////////////////////////////////////////////////////////

// Parameters for connection to icecast streaming server
$iceServer = "sotf.dsd.sztaki.hu";
$icePort = "8000";
$encoderPassword = "radjo";

// The command to start streaming __XX__ style tokens are replaced with the actual value
$streamCmd = "C:/Perl/bin/perl $basedir/code/contrib/iceplay -b __BITRATE__ -s $iceServer -P $icePort -p $encoderPassword -l __PLAYLIST__ -n __NAME__ ";
##>>logs/play.log 2>&1 &";  

// The server will not start more streams than this
$maxNumberOfStreams = 30;

//////////////////////////////////////////////////////////////////////////
// DEBUGGING, LOGGING & ERROR HANDLING -----------------------------------
//////////////////////////////////////////////////////////////////////////

$logFile = "$basedir/logs/log";

// Temp. solution for debugging right after install, later you may switch this off
$debug = true;

//////////////////////////////////////////////////////////////////////////
// LANGUAGE SETUP  --------------------------------------------
//////////////////////////////////////////////////////////////////////////

// selectable languages for user interface
$outputLanguages = array("en");

$defaultLanguage = "en";

// languages appearing in language select boxes
$languages = array("en", "de", "hu", "it", "es", "cz", "fr", "ro", "ru");

//////////////////////////////////////////////////////////////////////////
// AUDIO OPTIONS ------------------------------------------------------
//////////////////////////////////////////////////////////////////////////

/**
* Specifies a directory where convert stuffs can be found.
*
* @package	StreamOnTheFly
* @variable	string	$helperdir
*/
$helperdir = "C:\sotf\helpers";

/**
* Path of LAME.
*
* LAME can encode and decode MP3 files.
* @package	StreamOnTheFly
* @variable	string	$lame
*/
$lame = $helperdir."/lame";

/**
* Path of SoX.
*
* SoX is able to generate a stereo PCM data array from a mono one.
* @package	StreamOnTheFly
* @variable	string	$sox
*/
$sox = $helperdir."/sox";

/**
* Path of oggenc.
*
* oggenc can encode Ogg Vorbis audio streams.
* @package	StreamOnTheFly
* @variable	string	$oggenc
*/
$oggenc = $helperdir."/oggenc";

/**
* Path of oggdec.
*
* oggdec can decode Ogg Vorbis audio streams.
* @package	StreamOnTheFly
* @variable	string	$oggdec
*/
$oggdec = $helperdir."/oggdec";

/**
* Progress bar character.
*
* @package	StreamOnTheFly
* @variable	string	$progressBarChar
*/
$progressBarChar = '|';

/**
* Length of progress bar.
*
* @package	StreamOnTheFly
* @variable	string	$progressBarLength
*/
$progressBarLength = 100;

/**
* Perl regexp for parse oggenc output.
*
* @package	StreamOnTheFly
* @variable	string	$oggencRegexp
*/
$oggencRegexp = "/^\t\[(...)\..%\].*$/";

/**
* Perl regexp for parse lame output during encode.
*
* @package	StreamOnTheFly
* @variable	string	$lameencRegexp
*/
$lameencRegexp = "/^.{6}?\/.{7}?\((..)%\)\|.*$/";

/**
* Bitrate tolerance.
*
* Specifies how much can differ the current avarage bitrate
* from one of the predefined values for variable bitrate streams.
* @package	StreamOnTheFly
* @variable	float	$bitrateTolerance
*/
$bitrateTolerance = 10;


/**
* Required formats.
*
* Array of associative arrays contains information about the audio format.
* @package	StreamOnTheFly
* @variable	array	$audioFormats
*/
$audioFormats = array(
					array(
						'format' => 'mp3',
						'bitrate' => '24',
						'channels' => '1',
						'samplerate' => '22050'),
					array(
						'format' => 'mp3',
						'bitrate' => '128',
						'channels' => '2',
						'samplerate' => '44100'),
					array(
						'format' => 'ogg',
						'bitrate' => '64',
						'channels' => '2',
						'samplerate' => '22050'),
				);

// index of the preferred streaming format from the list above
$preferredStreamingFormat = 1;

//////////////////////////////////////////////////////////////////////////
// MISC OPTIONS ------------------------------------------------------
//////////////////////////////////////////////////////////////////////////

// width and height of programme/station/series/contact icons
$iconWidth = 100;
$iconHeight = 100;

// MIME types to determine type of uploaded documents
$mimetypes = array(
				'doc'=>'application/msword',
				'gif'=>'image/gif',
				'htm'=>'text/html',
				'html'=>'text/html',
				'jpg'=>'image/jpeg',
				'mp3'=>'audio/mp3',
				'm3u'=>'audio/x-mpeg',
				'pdf'=>'application/pdf',
				'ps'=>'application/postscript',
				'txt'=>'text/plain',
				'xls'=>'application/vnd.ms-excel'
				);

?>
